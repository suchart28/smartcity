// ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Firebase
firebase.initializeApp(firebaseConfig);
const db = firebase.database();

// ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ò‡∏µ‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á (Light Mode)
const map = L.map('map').setView([16.4419, 102.835], 13);

// ‡πÉ‡∏ä‡πâ tile layer ‡∏à‡∏≤‡∏Å CartoDB Positron (‡∏™‡∏µ‡∏™‡∏ß‡πà‡∏≤‡∏á ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ä‡∏±‡∏î)
L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
  attribution: '&copy; OpenStreetMap contributors &copy; CartoDB'
}).addTo(map);

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ô‡πâ‡∏≥
function sendReport(level) {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(position => {
      const report = {
        lat: position.coords.latitude,
        lng: position.coords.longitude,
        level,
        timestamp: Date.now()
      };
      db.ref('reports').push(report);
      alert(`‚úÖ ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô "${level}" ‡πÅ‡∏•‡πâ‡∏ß`);
    }, () => {
      alert('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ');
    });
  } else {
    alert('‚ö†Ô∏è ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö GPS');
  }
}

// ‚úÖ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥ ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
document.querySelectorAll('.report-btn').forEach(btn => {
  btn.addEventListener('click', () => {
    const level = btn.dataset.level;
    sendReport(level);
  });
});

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏∏‡∏î‡∏à‡∏≤‡∏Å Firebase
db.ref('reports').on('value', snapshot => {
  const data = snapshot.val();
  if (!data) return;

  // ‡∏•‡∏ö marker ‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô
  map.eachLayer(layer => {
    if (layer instanceof L.CircleMarker) map.removeLayer(layer);
  });

  // ‡∏ß‡∏≤‡∏î marker ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  Object.values(data).forEach(r => {
    const color =
      r.level === '‡∏ó‡πà‡∏ß‡∏°‡∏Ç‡∏≤' ? '#2196f3' :  // üîµ ‡∏ü‡πâ‡∏≤‡πÅ‡∏ó‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
      r.level === '‡∏ó‡πà‡∏ß‡∏°‡πÄ‡∏≠‡∏ß' ? '#ff9800' :
      '#f44336';

    // ‡πÅ‡∏õ‡∏•‡∏á timestamp ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤
    const date = new Date(r.timestamp);
    const dateStr = date.toLocaleString('th-TH', {
      dateStyle: 'short',
      timeStyle: 'short'
    });

    L.circleMarker([r.lat, r.lng], {
      radius: 8,
      color,
      fillColor: color,
      fillOpacity: 0.9
    }).addTo(map)
      .bindPopup(`
        <b>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥:</b> ${r.level}<br>
        <b>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</b> ${dateStr}
      `);
  });
});

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡∏ß‡πà‡∏≤ 7 ‡∏ß‡∏±‡∏ô (604800000 ‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
function cleanupOldReports() {
  const sevenDaysAgo = Date.now() - 7 * 24 * 60 * 60 * 1000;

  db.ref('reports').once('value', snapshot => {
    const data = snapshot.val();
    if (!data) return;

    Object.entries(data).forEach(([key, report]) => {
      if (report.timestamp < sevenDaysAgo) {
        db.ref('reports/' + key).remove();
        console.log(`üóëÔ∏è ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡∏ß‡πà‡∏≤ 7 ‡∏ß‡∏±‡∏ô: ${key}`);
      }
    });
  });
}

// ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö
cleanupOldReports();
